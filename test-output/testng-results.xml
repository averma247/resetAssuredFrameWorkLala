<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="23" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="lala Rest Api Testing" duration-ms="6230" started-at="2018-12-04T09:27:12Z" finished-at="2018-12-04T09:27:18Z">
    <groups>
    </groups>
    <test name="lalaTestNGTest" duration-ms="6230" started-at="2018-12-04T09:27:12Z" finished-at="2018-12-04T09:27:18Z">
      <class name="com.lala.test.CancelOrderTest">
        <test-method status="PASS" signature="suitelalaTestNGTest()[pri:0, instance:com.lala.test.CancelOrderTest@4678c730]" name="suitelalaTestNGTest" is-config="true" duration-ms="9" started-at="2018-12-04T14:57:12Z" finished-at="2018-12-04T14:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitelalaTestNGTest -->
        <test-method status="PASS" signature="suitelalaTestNGTest()[pri:0, instance:com.lala.test.FetchOrderTest@5c7fa833]" name="suitelalaTestNGTest" is-config="true" duration-ms="0" started-at="2018-12-04T14:57:12Z" finished-at="2018-12-04T14:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitelalaTestNGTest -->
        <test-method status="PASS" signature="suitelalaTestNGTest()[pri:0, instance:com.lala.test.DriveToTakeOrderTest@39aeed2f]" name="suitelalaTestNGTest" is-config="true" duration-ms="0" started-at="2018-12-04T14:57:12Z" finished-at="2018-12-04T14:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitelalaTestNGTest -->
        <test-method status="PASS" signature="suitelalaTestNGTest()[pri:0, instance:com.lala.test.PlaceOrderTest@457e2f02]" name="suitelalaTestNGTest" is-config="true" duration-ms="1" started-at="2018-12-04T14:57:12Z" finished-at="2018-12-04T14:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitelalaTestNGTest -->
        <test-method status="PASS" signature="suitelalaTestNGTest()[pri:0, instance:com.lala.test.DriveToCompleteOrderTest@724af044]" name="suitelalaTestNGTest" is-config="true" duration-ms="0" started-at="2018-12-04T14:57:12Z" finished-at="2018-12-04T14:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitelalaTestNGTest -->
        <test-method status="PASS" signature="verifyCancelExistingOrder()[pri:1, instance:com.lala.test.CancelOrderTest@4678c730]" name="verifyCancelExistingOrder" duration-ms="19" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelExistingOrder -->
        <test-method status="PASS" signature="verifyCancelNewOrder()[pri:1, instance:com.lala.test.CancelOrderTest@4678c730]" name="verifyCancelNewOrder" duration-ms="276" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelNewOrder -->
        <test-method status="PASS" signature="verifyCancelNonExistingOrder()[pri:1, instance:com.lala.test.CancelOrderTest@4678c730]" name="verifyCancelNonExistingOrder" duration-ms="14" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelNonExistingOrder -->
        <test-method status="PASS" signature="verifyCancelOrderForAlreadyCancelledOrder()[pri:1, instance:com.lala.test.CancelOrderTest@4678c730]" name="verifyCancelOrderForAlreadyCancelledOrder" duration-ms="22" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelOrderForAlreadyCancelledOrder -->
        <test-method status="PASS" signature="verifyCancelOrderForCompletedOrder()[pri:1, instance:com.lala.test.CancelOrderTest@4678c730]" name="verifyCancelOrderForCompletedOrder" duration-ms="22" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelOrderForCompletedOrder -->
        <test-method status="PASS" signature="verifyCancelOrderForOnGoingOrder()[pri:1, instance:com.lala.test.CancelOrderTest@4678c730]" name="verifyCancelOrderForOnGoingOrder" duration-ms="17" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelOrderForOnGoingOrder -->
      </class> <!-- com.lala.test.CancelOrderTest -->
      <class name="com.lala.test.DriveToCompleteOrderTest">
        <test-method status="PASS" signature="verifyDriveToCompleteForCancelOrder()[pri:5, instance:com.lala.test.DriveToCompleteOrderTest@724af044]" name="verifyDriveToCompleteForCancelOrder" duration-ms="28" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToCompleteForCancelOrder -->
        <test-method status="PASS" signature="verifyDriveToCompleteForCompletedOrder()[pri:5, instance:com.lala.test.DriveToCompleteOrderTest@724af044]" name="verifyDriveToCompleteForCompletedOrder" duration-ms="32" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToCompleteForCompletedOrder -->
        <test-method status="PASS" signature="verifyDriveToCompleteForNewOrder()[pri:5, instance:com.lala.test.DriveToCompleteOrderTest@724af044]" name="verifyDriveToCompleteForNewOrder" duration-ms="326" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToCompleteForNewOrder -->
        <test-method status="PASS" signature="verifyDriveToCompleteForNonExistingOrder()[pri:5, instance:com.lala.test.DriveToCompleteOrderTest@724af044]" name="verifyDriveToCompleteForNonExistingOrder" duration-ms="11" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToCompleteForNonExistingOrder -->
        <test-method status="PASS" signature="verifyDriveToCompleteForOnderOnAssignedState()[pri:5, instance:com.lala.test.DriveToCompleteOrderTest@724af044]" name="verifyDriveToCompleteForOnderOnAssignedState" duration-ms="20" started-at="2018-12-04T14:57:18Z" finished-at="2018-12-04T14:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToCompleteForOnderOnAssignedState -->
      </class> <!-- com.lala.test.DriveToCompleteOrderTest -->
      <class name="com.lala.test.PlaceOrderTest">
        <test-method status="FAIL" signature="verifyFutureOrder()[pri:1, instance:com.lala.test.PlaceOrderTest@457e2f02]" name="verifyFutureOrder" duration-ms="2770" started-at="2018-12-04T14:57:12Z" finished-at="2018-12-04T14:57:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test is failed, Error while placing order, Please check by placing order manually.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test is failed, Error while placing order, Please check by placing order manually.
	at org.testng.Assert.fail(Assert.java:94)
	at com.lala.test.PlaceOrderTest.verifyFutureOrder(PlaceOrderTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFutureOrder -->
        <test-method status="PASS" signature="verifyNewOrder()[pri:1, instance:com.lala.test.PlaceOrderTest@457e2f02]" name="verifyNewOrder" duration-ms="2018" started-at="2018-12-04T14:57:15Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewOrder -->
        <test-method status="PASS" signature="verifyNewOrderWithInvalidPayload()[pri:1, instance:com.lala.test.PlaceOrderTest@457e2f02]" name="verifyNewOrderWithInvalidPayload" duration-ms="23" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewOrderWithInvalidPayload -->
      </class> <!-- com.lala.test.PlaceOrderTest -->
      <class name="com.lala.test.FetchOrderTest">
        <test-method status="PASS" signature="verifyFetchOrderForNewOrder()[pri:1, instance:com.lala.test.FetchOrderTest@5c7fa833]" name="verifyFetchOrderForNewOrder" duration-ms="275" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFetchOrderForNewOrder -->
        <test-method status="PASS" signature="verifyFetchOrderWhenOrderDoesNotExist()[pri:1, instance:com.lala.test.FetchOrderTest@5c7fa833]" name="verifyFetchOrderWhenOrderDoesNotExist" duration-ms="17" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFetchOrderWhenOrderDoesNotExist -->
        <test-method status="PASS" signature="verifyFetchOrderWhenOrderExist()[pri:1, instance:com.lala.test.FetchOrderTest@5c7fa833]" name="verifyFetchOrderWhenOrderExist" duration-ms="16" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFetchOrderWhenOrderExist -->
      </class> <!-- com.lala.test.FetchOrderTest -->
      <class name="com.lala.test.DriveToTakeOrderTest">
        <test-method status="PASS" signature="verifyDriveToTakeAlreadyCancelledOrder()[pri:1, instance:com.lala.test.DriveToTakeOrderTest@39aeed2f]" name="verifyDriveToTakeAlreadyCancelledOrder" duration-ms="25" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToTakeAlreadyCancelledOrder -->
        <test-method status="PASS" signature="verifyDriveToTakeAlreadyCompletedOrder()[pri:1, instance:com.lala.test.DriveToTakeOrderTest@39aeed2f]" name="verifyDriveToTakeAlreadyCompletedOrder" duration-ms="26" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToTakeAlreadyCompletedOrder -->
        <test-method status="PASS" signature="verifyDriveToTakeAlreadyOnGoingOrder()[pri:1, instance:com.lala.test.DriveToTakeOrderTest@39aeed2f]" name="verifyDriveToTakeAlreadyOnGoingOrder" duration-ms="22" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToTakeAlreadyOnGoingOrder -->
        <test-method status="FAIL" signature="verifyDriveToTakeExistingOrder()[pri:1, instance:com.lala.test.DriveToTakeOrderTest@39aeed2f]" name="verifyDriveToTakeExistingOrder" duration-ms="17" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [422]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [422]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.lala.test.DriveToTakeOrderTest.verifyDriveToTakeExistingOrder(DriveToTakeOrderTest.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToTakeExistingOrder -->
        <test-method status="PASS" signature="verifyDriveToTakeOnOrderDoesNotExist()[pri:1, instance:com.lala.test.DriveToTakeOrderTest@39aeed2f]" name="verifyDriveToTakeOnOrderDoesNotExist" duration-ms="14" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToTakeOnOrderDoesNotExist -->
        <test-method status="PASS" signature="verifyDriveToTakeOrder()[pri:1, instance:com.lala.test.DriveToTakeOrderTest@39aeed2f]" name="verifyDriveToTakeOrder" duration-ms="179" started-at="2018-12-04T14:57:17Z" finished-at="2018-12-04T14:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDriveToTakeOrder -->
      </class> <!-- com.lala.test.DriveToTakeOrderTest -->
    </test> <!-- lalaTestNGTest -->
  </suite> <!-- lala Rest Api Testing -->
</testng-results>
